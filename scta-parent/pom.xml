<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/>
    </parent>

    <groupId>com.dumas.scta</groupId>
    <artifactId>scta-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <name>scta-parent</name>
    <packaging>pom</packaging>
    <description>
        依赖管理，根依赖
    </description>

    <developers>
        <developer>
            <name>dumas</name>
            <email>/</email>
            <organization>/</organization>
            <organizationUrl>/</organizationUrl>
        </developer>
    </developers>

    <properties>
        <!-- 基础框架模版版本 -->
        <sbta.version>1.0.0-SNAPSHOT</sbta.version>

        <!-- 构建版本 -->
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- spring -->
        <spring-boot.version>2.6.3</spring-boot.version>
        <spring-boot-admin.version>2.6.6</spring-boot-admin.version>
        <!-- spring-cloud -->
        <spring-cloud.version>2021.0.1</spring-cloud.version>
        <netflix-zuul.version>2.2.10.RELEASE</netflix-zuul.version>
        <!-- ali-spring-cloud-alibaba -->
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <!-- nacos -->
        <nacos-client.latest-version>1.4.2</nacos-client.latest-version>
        <nacos-config.version>0.2.10</nacos-config.version>
        <!-- rocketmq-spring -->
        <rocketmq-spring.version>2.2.0</rocketmq-spring.version>
        <!-- 文件加密 -->
        <jasypt.version>3.0.4</jasypt.version>
        <!-- mybatis -->
        <mybatis.version>2.2.2</mybatis.version>
        <tk-mybatis.version>4.2.1</tk-mybatis.version>
        <pagehelper.version>1.4.1</pagehelper.version>
        <!-- soul-client -->
        <soul-client.version>2.3.0-RELEASE</soul-client.version>
        <!-- 分布式事务 seata -->
        <alibaba-seata.version>2.2.0.RELEASE</alibaba-seata.version>
        <io.seata.version>1.5.0</io.seata.version>
        <!-- alibaba-druid -->
        <alibaba-druid.version>1.2.9</alibaba-druid.version>
        <!-- sentinel-datasource-nacos -->
        <sentinel-datasource-nacos.version>1.8.4</sentinel-datasource-nacos.version>
        <!-- sentinel-datasource-apollo -->
        <sentinel-datasource-apollo.version>1.8.4</sentinel-datasource-apollo.version>
        <!-- tools -->
        <fastjson.version>1.2.80</fastjson.version>
        <guava.version>31.1-jre</guava.version>

        <lombok.version>1.18.24</lombok.version>
    </properties>

    <!--依赖管理-->
    <dependencies>
        <!--让每个模块强行加入该依赖，免得一个个添加（由于scope被丢弃）-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
    </dependencies>

    <!--
        引入 Spring Boot、Spring Cloud、Spring Cloud Alibaba 三者 BOM 文件，进行依赖版本的管理，防止不兼容。
        在 https://dwz.cn/mcLIfNKt 文章中，Spring Cloud Alibaba 开发团队推荐了三者的依赖关系
     -->
    <dependencyManagement>
        <dependencies>
            <!--##########################################################-->
            <!--       SpringBoot                                         -->
            <!--##########################################################-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--Spring基础依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--##########################################################-->
            <!--       SpringCloud                                        -->
            <!--##########################################################-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--##########################################################-->
            <!--       SpringCloud Alibaba                                -->
            <!--##########################################################-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Nacos相关依赖 -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${nacos-client.latest-version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.boot</groupId>
                <artifactId>nacos-config-spring-boot-starter</artifactId>
                <version>${nacos-config.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <!--##########################################################-->
            <!--       SpringBoot Admin                                   -->
            <!--##########################################################-->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--##########################################################-->
            <!--       MyBatis 相关依赖                                     -->
            <!--##########################################################-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${tk-mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!--##########################################################-->
            <!--       微服务网关                                           -->
            <!--##########################################################-->
            <!-- SpringCloud Netflix Zuul -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
                <version>${netflix-zuul.version}</version>
            </dependency>
            <!-- soul-client -->
            <dependency>
                <groupId>org.dromara</groupId>
                <artifactId>soul-client-apache-dubbo</artifactId>
                <version>${soul-client.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-seata</artifactId>
                <version>${alibaba-seata.version}</version>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${io.seata.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${alibaba-druid.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-nacos</artifactId>
                <version>${sentinel-datasource-nacos.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-datasource-apollo</artifactId>
                <version>${sentinel-datasource-apollo.version}</version>
            </dependency>


            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <distributionManagement>
        <!-- 私有仓库的位置 -->

    </distributionManagement>

    <!--构建-->
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <!-- java编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>UTF-8</encoding>
                        <compilerArguments>
                            <verbose/>
                            <bootclasspath>${java.home}/lib/rt.jar${path.separator}${java.home}/lib/jce.jar
                            </bootclasspath>
                        </compilerArguments>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>